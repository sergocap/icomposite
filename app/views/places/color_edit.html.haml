.place
  .color_edit
    = simple_form_for [@region.project, @region, @place] do |f|
      = f.input :x, as: :hidden
      = f.input :y, as: :hidden
      - width = Paperclip::Geometry.from_file(Paperclip.io_adapters.for(@place.image)).width
      - height = Paperclip::Geometry.from_file(Paperclip.io_adapters.for(@place.image)).height

      %svg{ class: 'filterPlace', :height => height, :width => width }
        %defs
          %filter{ id: 'fp1' }

            -#%feGaussianBlur{ stddeviation: 5, :result => 'a1' }
            -#%feColorMatrix{ in: 'a1', type: 'saturate', values: '0' }

            -#%feComponentTransfer

              -#%feFuncR{ type: 'linear', slope: '5'   }
              -#%feFuncG{ type: 'linear', slope: '0.2' }
              -#%feFuncB{ type: 'linear', slope: '0.2' }
              -#%feFuncA{ type: 'identity' }

              -#%feFuncR{ type: 'gamma', amplitude: '1.1', exponent: '1', offset: '0' }
              -#%feFuncG{ type: 'gamma', amplitude: '1.1', exponent: '1', offset: '0' }
              -#%feFuncB{ type: 'gamma', amplitude: '1.3', exponent: '0.9', offset: '0.5' }

            -#%feColorMatrix{ type: 'matrix', values: '0.343 0.669 0.119 0 0 0.249 0.626 0.130 0 0 0.172 0.334 0.111 0 0 0 0 0 1 0' }

            -#%feColorMatrix{ type: 'saturate', values: '5' }

        %image{ :height => '100%', :width => '100%', 'xlink:href' => @place.image.url, class: 'svf_place_image', filter: 'url(#fp1)' }




      -#.image_edit_wrapper
        -#= image_tag @place.image.url, class: 'place_image'

      = f.button :submit, :name => 'colored', :value => 'Применить'
